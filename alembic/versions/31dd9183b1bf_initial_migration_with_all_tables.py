"""Initial migration with all tables

Revision ID: 31dd9183b1bf
Revises: 
Create Date: 2025-10-20 14:09:44.335988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31dd9183b1bf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('metric_unit', sa.String(length=50), nullable=True),
    sa.Column('metric_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_metrics_id'), 'system_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_system_metrics_metric_name'), 'system_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_system_metrics_timestamp'), 'system_metrics', ['timestamp'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_type', sa.Enum('BRACELET', 'CLIP', 'WATCH', 'BAND', 'MOBILE_APP', name='devicetype'), nullable=False),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('battery_level', sa.Float(), nullable=True),
    sa.Column('signal_strength', sa.Integer(), nullable=True),
    sa.Column('is_connected', sa.Boolean(), nullable=True),
    sa.Column('last_connected', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('device_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_device_id'), 'devices', ['device_id'], unique=True)
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.Enum('WORKOUT', 'MEDITATION', 'SLEEP', 'DAILY_MONITORING', 'CLINICAL', name='sessiontype'), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('data_points_collected', sa.Integer(), nullable=True),
    sa.Column('average_wellness_score', sa.Float(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_index(op.f('ix_sessions_session_id'), 'sessions', ['session_id'], unique=True)
    op.create_table('analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('clarity_quality_score', sa.Float(), nullable=True),
    sa.Column('clarity_snr', sa.Float(), nullable=True),
    sa.Column('clarity_noise_reduced', sa.Boolean(), nullable=True),
    sa.Column('clarity_quality_assessment', sa.Enum('EXCELLENT', 'GOOD', 'FAIR', 'POOR', name='signalquality'), nullable=True),
    sa.Column('clarity_artifacts', sa.JSON(), nullable=True),
    sa.Column('ifrs_dominant_frequency', sa.Float(), nullable=True),
    sa.Column('ifrs_rhythm_classification', sa.Enum('NORMAL_SINUS', 'ELEVATED', 'LOW', 'IRREGULAR', 'ATHLETIC', name='rhythmclassification'), nullable=True),
    sa.Column('ifrs_respiratory_rate', sa.Float(), nullable=True),
    sa.Column('ifrs_hrv_score', sa.Float(), nullable=True),
    sa.Column('ifrs_frequency_bands', sa.JSON(), nullable=True),
    sa.Column('ifrs_hrv_features', sa.JSON(), nullable=True),
    sa.Column('timesystems_pattern_type', sa.Enum('STABLE', 'INCREASING', 'DECREASING', 'OSCILLATING', 'IRREGULAR', name='patterntype'), nullable=True),
    sa.Column('timesystems_circadian_phase', sa.Enum('MORNING', 'AFTERNOON', 'EVENING', 'NIGHT', name='circadianphase'), nullable=True),
    sa.Column('timesystems_temporal_consistency', sa.Float(), nullable=True),
    sa.Column('timesystems_rhythm_score', sa.Float(), nullable=True),
    sa.Column('timesystems_pattern_recognition', sa.JSON(), nullable=True),
    sa.Column('timesystems_circadian_alignment', sa.JSON(), nullable=True),
    sa.Column('lia_condition', sa.String(length=100), nullable=True),
    sa.Column('lia_confidence', sa.Float(), nullable=True),
    sa.Column('lia_wellness_score', sa.Float(), nullable=True),
    sa.Column('lia_probabilities', sa.JSON(), nullable=True),
    sa.Column('lia_recommendation', sa.Text(), nullable=True),
    sa.Column('lia_wellness_assessment', sa.JSON(), nullable=True),
    sa.Column('lia_risk_factors', sa.JSON(), nullable=True),
    sa.Column('lia_positive_indicators', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_results_id'), 'analysis_results', ['id'], unique=False)
    op.create_index(op.f('ix_analysis_results_session_id'), 'analysis_results', ['session_id'], unique=False)
    op.create_index(op.f('ix_analysis_results_timestamp'), 'analysis_results', ['timestamp'], unique=False)
    op.create_table('biosignal_readings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('heart_rate', sa.Float(), nullable=False),
    sa.Column('spo2', sa.Float(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('activity', sa.Float(), nullable=False),
    sa.Column('signal_quality', sa.Enum('EXCELLENT', 'GOOD', 'FAIR', 'POOR', name='signalquality'), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_biosignal_readings_device_id'), 'biosignal_readings', ['device_id'], unique=False)
    op.create_index(op.f('ix_biosignal_readings_id'), 'biosignal_readings', ['id'], unique=False)
    op.create_index(op.f('ix_biosignal_readings_session_id'), 'biosignal_readings', ['session_id'], unique=False)
    op.create_index(op.f('ix_biosignal_readings_timestamp'), 'biosignal_readings', ['timestamp'], unique=False)
    op.create_table('processing_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('layer', sa.String(length=50), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processing_logs_id'), 'processing_logs', ['id'], unique=False)
    op.create_index(op.f('ix_processing_logs_layer'), 'processing_logs', ['layer'], unique=False)
    op.create_index(op.f('ix_processing_logs_timestamp'), 'processing_logs', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_processing_logs_timestamp'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_layer'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_id'), table_name='processing_logs')
    op.drop_table('processing_logs')
    op.drop_index(op.f('ix_biosignal_readings_timestamp'), table_name='biosignal_readings')
    op.drop_index(op.f('ix_biosignal_readings_session_id'), table_name='biosignal_readings')
    op.drop_index(op.f('ix_biosignal_readings_id'), table_name='biosignal_readings')
    op.drop_index(op.f('ix_biosignal_readings_device_id'), table_name='biosignal_readings')
    op.drop_table('biosignal_readings')
    op.drop_index(op.f('ix_analysis_results_timestamp'), table_name='analysis_results')
    op.drop_index(op.f('ix_analysis_results_session_id'), table_name='analysis_results')
    op.drop_index(op.f('ix_analysis_results_id'), table_name='analysis_results')
    op.drop_table('analysis_results')
    op.drop_index(op.f('ix_sessions_session_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_metrics_timestamp'), table_name='system_metrics')
    op.drop_index(op.f('ix_system_metrics_metric_name'), table_name='system_metrics')
    op.drop_index(op.f('ix_system_metrics_id'), table_name='system_metrics')
    op.drop_table('system_metrics')
    # ### end Alembic commands ###
